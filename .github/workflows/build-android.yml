name: Build Android APK - A Life Is A Random Journey

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Permite ejecutar manualmente

# Añadir permisos explícitos para releases
permissions:
  contents: write
  actions: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90  # Aumentar a 90 minutos (buildozer puede ser lento)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'  # Cachear pip dependencies
    
    - name: Setup Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'
    
    - name: Cache buildozer dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.gradle
        key: ${{ runner.os }}-buildozer-${{ hashFiles('game/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libncurses-dev cmake \
          libffi-dev libssl-dev libltdl-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
    
    - name: Verify installation and environment
      run: |
        buildozer --version
        python --version
        java -version
        echo "JAVA_HOME: $JAVA_HOME"
        echo "PATH: $PATH"
        
    - name: Setup buildozer and verify spec
      run: |
        cd game
        echo "🔍 Verificando buildozer.spec existente..."
        ls -la buildozer.spec || echo "❌ No buildozer.spec found"
        echo "🔍 Contenido del buildozer.spec:"
        cat buildozer.spec | head -20 || echo "❌ No se puede leer buildozer.spec"
        echo "🔍 Verificando configuración bin_dir:"
        grep "bin_dir" buildozer.spec || echo "❌ bin_dir no configurado"
        echo "🔍 Creando directorio bin/ si no existe:"
        mkdir -p bin
        echo "🔍 Estructura del directorio:"
        ls -la
    
    - name: Build APK with detailed logging
      run: |
        cd game
        echo "🚀 Iniciando compilación APK..."
        buildozer android debug --verbose 2>&1 | tee build.log
    
    - name: Find all APK files (comprehensive search)
      if: always()
      run: |
        cd game
        echo "🔍 Búsqueda COMPLETA de archivos APK..."
        echo "📁 Búsqueda recursiva desde directorio actual:"
        find . -name "*.apk" -type f -exec ls -la {} \; || echo "❌ No se encontraron APKs en directorio actual"
        echo "📁 Búsqueda en bin/ (configurado en buildozer.spec):"
        ls -la bin/ 2>/dev/null || echo "❌ No existe directorio bin/"
        find bin/ -name "*.apk" -type f -exec ls -la {} \; 2>/dev/null || echo "❌ No APKs en bin/"
        echo "📁 Búsqueda en .buildozer:"
        find .buildozer -name "*.apk" -type f -exec ls -la {} \; 2>/dev/null || echo "❌ No se encontraron APKs en .buildozer"
        echo "📁 Búsqueda específica en outputs de gradle:"
        find .buildozer -path "*/outputs/apk/*" -name "*.apk" -exec ls -la {} \; 2>/dev/null || echo "❌ No APKs en gradle outputs"
        echo "📁 Búsqueda en android platform build:"
        find .buildozer/android/platform -name "*.apk" -type f -exec ls -la {} \; 2>/dev/null || echo "❌ No APKs en android platform"
        echo "🔍 Verificando si buildozer completó exitosamente:"
        grep -i "success\|complete\|finished" build.log | tail -5 || echo "❌ No hay indicadores de éxito en el log"
    
    - name: Create bin directory and copy APKs
      if: always()
      run: |
        cd game
        echo "📦 Creando directorio bin/ y copiando APKs..."
        mkdir -p bin
        # Buscar y copiar todos los APKs encontrados
        find . -name "*.apk" -type f -not -path "./bin/*" -exec cp {} bin/ \; 2>/dev/null || echo "❌ No se encontraron APKs para copiar"
        echo "📋 Contenido final de bin/:"
        ls -la bin/ || echo "❌ No existe directorio bin/"
    
    - name: Debug build artifacts and logs
      if: always()
      run: |
        cd game
        echo "📝 Últimas líneas del log de compilación:"
        tail -50 build.log || echo "❌ No build.log found"
        echo "📋 Estructura completa del directorio:"
        find . -maxdepth 3 -type d | head -20
    
    - name: Upload APK Artifact (buscar en múltiples ubicaciones)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: alifeisarandomjourney-${{ github.ref_name }}-debug
        path: |
          game/bin/*.apk
          game/.buildozer/android/platform/build-**/outputs/**/*.apk
          game/**/*.apk
        if-no-files-found: warn
        retention-days: 30
    
    - name: Upload build logs (always)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ github.ref_name }}
        path: |
          game/build.log
          game/.buildozer/android/platform/build-**/logs/**
        if-no-files-found: warn
        retention-days: 7
    
    - name: Create Release (if tag and APK found)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd game
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        if [ -n "$APK_FILE" ]; then
          echo "✅ APK encontrado: $APK_FILE"
          gh release create ${{ github.ref_name }} \
            --title "A Life Is A Random Journey ${{ github.ref_name }}" \
            --notes "🎮 **A Life Is A Random Journey ${{ github.ref_name }}**
            
            🚀 **APK Debug Build**
            - 📱 Optimizado para móvil (360x640)
            - 🎨 Interfaz estilo Undertale/Deltarune
            - 🎵 Música CC0 incluida
            - 🎯 Versión de desarrollo
            
            📋 **Instalación:**
            1. Descargar el APK
            2. Habilitar \"Fuentes desconocidas\" en Android
            3. Instalar y disfrutar!" \
            --prerelease \
            "$APK_FILE"
        else
          echo "❌ No se encontró APK para el release"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 